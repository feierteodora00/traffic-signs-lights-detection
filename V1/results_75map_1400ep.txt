 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 16, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 89 K-images (1 Kilo-batches_64) 

 calculation mAP (mean average precision)...
 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 5846, unique_truth_count = 1033  
 rank = 0 of ranks = 5846  rank = 100 of ranks = 5846  rank = 200 of ranks = 5846  rank = 300 of ranks = 5846  rank = 400 of ranks = 5846  rank = 500 of ranks = 5846  rank = 600 of ranks = 5846  rank = 700 of ranks = 5846  rank = 800 of ranks = 5846  rank = 900 of ranks = 5846  rank = 1000 of ranks = 5846  rank = 1100 of ranks = 5846  rank = 1200 of ranks = 5846  rank = 1300 of ranks = 5846  rank = 1400 of ranks = 5846  rank = 1500 of ranks = 5846  rank = 1600 of ranks = 5846  rank = 1700 of ranks = 5846  rank = 1800 of ranks = 5846  rank = 1900 of ranks = 5846  rank = 2000 of ranks = 5846  rank = 2100 of ranks = 5846  rank = 2200 of ranks = 5846  rank = 2300 of ranks = 5846  rank = 2400 of ranks = 5846  rank = 2500 of ranks = 5846  rank = 2600 of ranks = 5846  rank = 2700 of ranks = 5846  rank = 2800 of ranks = 5846  rank = 2900 of ranks = 5846  rank = 3000 of ranks = 5846  rank = 3100 of ranks = 5846  rank = 3200 of ranks = 5846  rank = 3300 of ranks = 5846  rank = 3400 of ranks = 5846  rank = 3500 of ranks = 5846  rank = 3600 of ranks = 5846  rank = 3700 of ranks = 5846  rank = 3800 of ranks = 5846  rank = 3900 of ranks = 5846  rank = 4000 of ranks = 5846  rank = 4100 of ranks = 5846  rank = 4200 of ranks = 5846  rank = 4300 of ranks = 5846  rank = 4400 of ranks = 5846  rank = 4500 of ranks = 5846  rank = 4600 of ranks = 5846  rank = 4700 of ranks = 5846  rank = 4800 of ranks = 5846  rank = 4900 of ranks = 5846  rank = 5000 of ranks = 5846  rank = 5100 of ranks = 5846  rank = 5200 of ranks = 5846  rank = 5300 of ranks = 5846  rank = 5400 of ranks = 5846  rank = 5500 of ranks = 5846  rank = 5600 of ranks = 5846  rank = 5700 of ranks = 5846  rank = 5800 of ranks = 5846 class_id = 0, name = traffic light, ap = 29.21%   	 (TP = 30, FP = 38) 
class_id = 1, name = stop, ap = 31.93%   	 (TP = 32, FP = 40) 
class_id = 2, name = speed limit, ap = 64.02%   	 (TP = 380, FP = 140) 
class_id = 3, name = crosswalk, ap = 43.15%   	 (TP = 51, FP = 40) 
class_id = 4, name = danger, ap = 72.06%   	 (TP = 67, FP = 25) 
class_id = 5, name = mandatory, ap = 47.39%   	 (TP = 42, FP = 33) 
class_id = 6, name = prohibitory, ap = 51.98%   	 (TP = 36, FP = 51) 
class_id = 7, name = other, ap = 34.26%   	 (TP = 45, FP = 51) 

 for conf_thresh = 0.25, precision = 0.62, recall = 0.66, F1-score = 0.64 
 for conf_thresh = 0.25, TP = 683, FP = 418, FN = 350, average IoU = 51.90 % 

 IoU threshold = 75 %, used Area-Under-Curve for each unique Recall 
 mean average precision (mAP@0.75) = 0.467509, or 46.75 % 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
