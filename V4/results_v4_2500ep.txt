 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 160 K-images (2 Kilo-batches_64) 

 calculation mAP (mean average precision)...
 Detection layer: 30 - type = 28 
 Detection layer: 37 - type = 28 

 detections_count = 4668, unique_truth_count = 1033  
 rank = 0 of ranks = 4668  rank = 100 of ranks = 4668  rank = 200 of ranks = 4668  rank = 300 of ranks = 4668  rank = 400 of ranks = 4668  rank = 500 of ranks = 4668  rank = 600 of ranks = 4668  rank = 700 of ranks = 4668  rank = 800 of ranks = 4668  rank = 900 of ranks = 4668  rank = 1000 of ranks = 4668  rank = 1100 of ranks = 4668  rank = 1200 of ranks = 4668  rank = 1300 of ranks = 4668  rank = 1400 of ranks = 4668  rank = 1500 of ranks = 4668  rank = 1600 of ranks = 4668  rank = 1700 of ranks = 4668  rank = 1800 of ranks = 4668  rank = 1900 of ranks = 4668  rank = 2000 of ranks = 4668  rank = 2100 of ranks = 4668  rank = 2200 of ranks = 4668  rank = 2300 of ranks = 4668  rank = 2400 of ranks = 4668  rank = 2500 of ranks = 4668  rank = 2600 of ranks = 4668  rank = 2700 of ranks = 4668  rank = 2800 of ranks = 4668  rank = 2900 of ranks = 4668  rank = 3000 of ranks = 4668  rank = 3100 of ranks = 4668  rank = 3200 of ranks = 4668  rank = 3300 of ranks = 4668  rank = 3400 of ranks = 4668  rank = 3500 of ranks = 4668  rank = 3600 of ranks = 4668  rank = 3700 of ranks = 4668  rank = 3800 of ranks = 4668  rank = 3900 of ranks = 4668  rank = 4000 of ranks = 4668  rank = 4100 of ranks = 4668  rank = 4200 of ranks = 4668  rank = 4300 of ranks = 4668  rank = 4400 of ranks = 4668  rank = 4500 of ranks = 4668  rank = 4600 of ranks = 4668 class_id = 0, name = traffic light, ap = 54.70%   	 (TP = 36, FP = 15) 
class_id = 1, name = stop, ap = 94.13%   	 (TP = 58, FP = 5) 
class_id = 2, name = speed limit, ap = 96.32%   	 (TP = 456, FP = 46) 
class_id = 3, name = crosswalk, ap = 77.77%   	 (TP = 68, FP = 14) 
class_id = 4, name = danger, ap = 78.58%   	 (TP = 70, FP = 13) 
class_id = 5, name = mandatory, ap = 75.58%   	 (TP = 51, FP = 19) 
class_id = 6, name = prohibitory, ap = 60.58%   	 (TP = 40, FP = 43) 
class_id = 7, name = other, ap = 62.65%   	 (TP = 64, FP = 27) 

 for conf_thresh = 0.25, precision = 0.82, recall = 0.82, F1-score = 0.82 
 for conf_thresh = 0.25, TP = 843, FP = 182, FN = 190, average IoU = 61.13 % 

 IoU threshold = 50 %, used Area-Under-Curve for each unique Recall 
 mean average precision (mAP@0.50) = 0.750392, or 75.04 % 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
